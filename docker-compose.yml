services:
  flask-app:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    ports:
      - "5001:5000"
      - "5678:5678"
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    labels:
      logging: "promtail"
      logging_jobname: "server"
    profiles:
      - server
      - all

  frontend:
    build:
      context: ./ui
      dockerfile: Dockerfile.dev
    ports:
      - "4000:3000"
    environment:
      - NODE_ENV=development
    labels:
      logging: "promtail"
      logging_jobname: "ui"
    profiles:
      - ui
      - all


  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./logging/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
    profiles:
      - server
      - ui
      - all

  loki:
    image: grafana/loki:latest
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./logging/loki-config.yml:/etc/loki/local-config.yaml
    profiles:
      - server
      - ui
      - all

  promtail:
    image:  grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./logging/promtail-config.yml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    profiles:
      - server
      - ui
      - all

volumes:
  grafana-data: